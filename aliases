### TMUX

# List Sessions
function tml {
  tmux list-sessions
}

### POSTGRES

alias pgstop="launchctl unload ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist"
alias pgstart="launchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist"
alias pgps="ps auxw | grep postgres"

### AG

alias ag='noglob ag'

### FZF

alias vif='vim $(fzf --height 40%)'

### GIT

alias gitundo="git reset HEAD~; git status"
alias gitaddu="echo -e \"a\n*\nq\n\"|git add -i" # add untracked through interactive mode
function gitsweep {
  git branch --merged | grep -E -v "\*|master|develop|dev|production" | xargs -n 1 git branch -d
}

function gup {
  eval "$( git push 2>&1 >/dev/null | grep -o 'git push.*$' )"
}

gitupdate() {
  bold=$(tput bold)
  normal=$(tput sgr0)
  message="stashed for gitupdate"

  # git stash
  echo "${bold}Stashing any changes with a message \"stashed for gitupdate\".${normal}"
  git stash push -m "stashed for gitupdate"

  # git pull
  echo "${bold}Pulling latest just to make sure.${normal}"
  git pull

  base_branch="${GIT_BASE_BRANCH:-master}"
  # git checkout master
  # git pull
  echo "${bold}Switching to $base_branch branch and pulling latest.${normal}"
  git checkout "$base_branch"
  git pull

  # git checkout -
  # git merge master
  echo "${bold}Switching back to your feature branch and attempting to merge the latest.${normal}"
  git checkout -
  git merge "$base_branch"

  if [ $? -eq 0 ]; then
    # FIXME: Needs to only pop the stash if stashing was successful earlier
    # git stash apply
    # echo "${bold}Attempting to apply stashed changes.${normal}"
    # git stash pop
    echo "${bold}STASHED CHANGES MAY STILL BE STASHED!${normal}"
  fi
}

### GIT-TOGETHER

alias gt="git-together"

### SOPS (Secrets manager)

alias sopsenc="echo 'Preparing secrets file for deployment' && sops -encrypt secrets.yaml > secrets.sops.yaml"
alias sopsdec="echo 'Generating human readable secrets file' && sops -decrypt secrets.sops.yaml > secrets.yaml"

### TESTING

alias rof="rspec --only-failures"
alias rpr='rspec $(git diff --name-only develop spec/**/*_spec.rb)'
alias my_cop="rubocop -D -c .rubocop.nathan.yml"

### MISC

alias rand64="openssl rand -hex 32"

# ctags ??? Not sure what this is doing for me
if command -v brew &> /dev/null; then
  alias ctags="`brew --prefix`/bin/ctags"
else
  # Not implemented
fi

function fileserver {
  if [ $1 ]; then
    python3 -m http.server $1
  else
    python3 -m http.server 3000
  fi
}

function clean_temp {
  find ~/temp -mtime +40 -type f -exec rm {} \;
  find ~/temp -type d -empty -exec rmdir {} \;
}

function rm~ {
  find . -type f -name '*~' -exec rm {} \;
  find . -type f -name '*.orig' -exec rm {} \;
  find . -type f -name 'dump.rdb' -exec rm {} \;
}

alias stopupdates='sudo defaults write /Library/Preferences/com.apple.SoftwareUpdate AutomaticDownload -boolean FALSE'
alias startupdates='sudo defaults write /Library/Preferences/com.apple.SoftwareUpdate AutomaticDownload -boolean TRUE'

alias iclerk="$HOME/proj/infra/iclerk.bash"
alias kubectl='microk8s kubectl'
